mocha/script1.js:1:1 Removed function add(array) { var sum = 0; for (var i = 0; i < array.length; i = i + 1) { sum += array[i]; } return sum; } -> SURVIVED
mocha/script1.js:9:1 Removed function sub(array) { var x = array[0]; var y = array[1]; var sum = x - y; sum = sum + 0; console.log(sum); return sum; } -> SURVIVED
mocha/script1.js:24:1 Removed function mul(array) { var x = array[0]; var y = array[1]; var sum = x * y; if (sum > 9){ console.log(sum); } return sum; } -> SURVIVED
mocha/script1.js:34:1 Removed exports.add = add; -> SURVIVED
mocha/script1.js:35:1 Removed exports.sub = sub; -> SURVIVED
mocha/script1.js:38:1 Removed exports.mul = mul; -> SURVIVED
mocha/script1.js:40:1 Removed console.log = function() { // Mock console log to prevent output from leaking to mutation test console }; -> SURVIVED
mocha/script1.js:2:5 Removed var sum = 0; -> SURVIVED
mocha/script1.js:3:5 Removed for (var i = 0; i < array.length; i = i + 1) { sum += array[i]; } -> SURVIVED
mocha/script1.js:6:5 Removed return sum; -> SURVIVED
mocha/script1.js:2:15 Replaced 0 with 1 -> SURVIVED
mocha/script1.js:3:18 Replaced 0 with 1 -> SURVIVED
mocha/script1.js:4:9 Removed sum += array[i]; -> SURVIVED
mocha/script1.js:10:5 Removed var x = array[0]; -> SURVIVED
mocha/script1.js:11:5 Removed var y = array[1]; -> SURVIVED
mocha/script1.js:12:5 Removed var sum = x - y; -> SURVIVED
mocha/script1.js:13:5 Removed sum = sum + 0; -> SURVIVED
mocha/script1.js:14:5 Removed console.log(sum); -> SURVIVED
mocha/script1.js:15:5 Removed return sum; -> SURVIVED
mocha/script1.js:10:19 Replaced 0 with 1 -> SURVIVED
mocha/script1.js:11:19 Replaced 1 with 2 -> SURVIVED
mocha/script1.js:12:16 Replaced  -  with + -> SURVIVED
mocha/script1.js:13:14 Replaced  +  with - -> SURVIVED
mocha/script1.js:13:17 Replaced 0 with 1 -> SURVIVED
mocha/script1.js:14:17 Replaced sum with "MUTATION!" -> SURVIVED
mocha/script1.js:14:5 Replaced console.log(sum) with sum -> SURVIVED
mocha/script1.js:14:5 Replaced console.log(sum) with console -> SURVIVED
mocha/script2.js:1:1 Removed function log() { } -> SURVIVED
mocha/script2.js:4:1 Removed function mul(array) { array = array; log(array); return array.reduce(function (x, y) { return x * y; }); } -> SURVIVED
mocha/script2.js:12:1 Removed exports.mul = mul; -> SURVIVED
mocha/script2.js:5:5 Removed array = array; -> SURVIVED
mocha/script2.js:6:5 Removed log(array); -> SURVIVED
mocha/script2.js:7:5 Removed return array.reduce(function (x, y) { return x * y; }); -> SURVIVED
mocha/script2.js:6:9 Replaced array with "MUTATION!" -> SURVIVED
mocha/script2.js:6:5 Replaced log(array) with array -> SURVIVED
mocha/script2.js:7:25 Replaced function (x, y) { return x * y; } with "MUTATION!" -> SURVIVED
mocha/script2.js:7:12 Replaced array.reduce(function (x, y) { return x * y; }) with function (x, y) { return x * y; } -> SURVIVED
mocha/script2.js:7:12 Replaced array.reduce(function (x, y) { return x * y; }) with array -> SURVIVED
mocha/script2.js:8:9 Removed return x * y; -> SURVIVED
mocha/script2.js:8:17 Replaced  *  with / -> SURVIVED
0 of 40 unignored mutations are tested (0%).
